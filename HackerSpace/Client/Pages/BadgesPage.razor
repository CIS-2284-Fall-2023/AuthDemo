@page "/Badges"
@inject IHttpClientFactory HttpClientFactory
<h3>Badges Page</h3>

@if (badges == null)
{
    <p>Loading...</p>
}
else
{
    @foreach (var badge in badges)
    {
        <p>
            <a href="/Badge/@badge.Id">@badge.Name</a>
            @badge.Description
            <button @onclick="@(()=>DeleteClickedAsync(badge))" type="button" class="btn btn_danger">Delete</button>
        </p>
    }
    <a href="/Badge">Add Badge</a>
}


@code {
    List<Badge>? badges;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var client = HttpClientFactory.CreateClient("HackerSpace.PublicServerAPI");
        badges = await client.GetFromJsonAsync<List<Badge>>($"api/Badges");
    }

    protected async Task DeleteClickedAsync(Badge badge)
    {
        var client = HttpClientFactory.CreateClient("HackerSpace.PublicServerAPI");
        await client.DeleteAsync($"api/Badges/{badge.Id}");
        badges.Remove(badge);
        StateHasChanged();
    }
}
